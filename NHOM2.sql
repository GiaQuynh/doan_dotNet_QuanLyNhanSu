CREATE DATABASE QuanLiNhanSu_Nhom2
USE QuanLiNhanSu_Nhom2

CREATE TABLE CHUCVU
(
	MACV NCHAR(10) NOT NULL,
	TENCN NVARCHAR(30),
	BACLUONG FLOAT,
	LUONGCB FLOAT,
	CONSTRAINT PK_CHUCVU PRIMARY KEY(MACV)
)

CREATE TABLE PHONGBAN
(
	MAPB NCHAR(10) NOT NULL,
	TENPB NVARCHAR(20),
	SOLUONG FLOAT,
	CONSTRAINT PK_PHONGBAN PRIMARY KEY(MAPB)
)

CREATE TABLE HOPDONG
(
	MAHD NCHAR(10) NOT NULL,
	TENHD NVARCHAR(30),
	NGAYBD DATE,
	NGAYKT DATE,
	TRANGTHAI NVARCHAR(20),
	CONSTRAINT PK_HOPDONG PRIMARY KEY(MAHD)
)


CREATE TABLE NHANVIEN
(
	MANV NCHAR(10) NOT NULL,
	TENVN NVARCHAR(40),
	GIOITINH NVARCHAR(3),
	NGAYSINH DATE,
	EMAIL NCHAR(40),
	SDT INT,
	CCCD INT,
	XEPLOAI NVARCHAR(10),
	MACV NCHAR(10),
	MAPB NCHAR(10),
	MAHD NCHAR(10),
	CONSTRAINT PK_NHANVIEN PRIMARY KEY(MANV),
	CONSTRAINT FK_NHANVIEN_CHUCVU FOREIGN KEY(MACV) REFERENCES CHUCVU(MACV),
	CONSTRAINT FK_NHANVIEN_PHONGBAN FOREIGN KEY(MAPB) REFERENCES PHONGBAN(MAPB),
	CONSTRAINT FK_NHANVIEN_HOPDONG FOREIGN KEY(MAHD) REFERENCES HOPDONG(MAHD)
)

CREATE TABLE PHUCAP
(
	MAPC NCHAR(10) NOT NULL,
	TENPC NVARCHAR(50),
	TIENPC FLOAT,
	CONSTRAINT PK_PHUCAP PRIMARY KEY(MAPC)
)

CREATE TABLE PHUCAP_NHANVIEN
(
	MAPC NCHAR(10),
	MANV NCHAR(10),
	CONSTRAINT PK_PC_NV PRIMARY KEY (MAPC,MANV),
	CONSTRAINT FK_PCNV_PC FOREIGN KEY(MAPC) REFERENCES PHUCAP(MAPC),
	CONSTRAINT FK_PCNV_NV FOREIGN KEY(MANV) REFERENCES NHANVIEN(MANV)
)

CREATE TABLE LUONG
(
	MALUONG INT IDENTITY (1,1) not null,
	MANV NCHAR(10),
	LUONGTL FLOAT,
	NGAYLL DATE NOT NULL,
	CONSTRAINT PK_LUONG PRIMARY KEY(MALUONG),
	CONSTRAINT FK_LUONG_NHANVIEN FOREIGN KEY(MANV) REFERENCES NHANVIEN(MANV)
)

CREATE TABLE THANNHAN
(
	MATN NCHAR(10) NOT NULL,
	HOTEN NVARCHAR(50),
	QUANHE NVARCHAR(15),
	MANV NCHAR(10),
	CONSTRAINT PK_THANNHAN PRIMARY KEY (MATN),
	CONSTRAINT FK_THANNHAN_NHANVIEN FOREIGN KEY(MANV) REFERENCES NHANVIEN(MANV)
)

CREATE TABLE TAIKHOAN
(
	MATK NCHAR(10) NOT NULL,
	MANV NCHAR(10),
	TAIKHOAN NVARCHAR(40),
	MATKHAU NVARCHAR(40),
	QUYEN NVARCHAR(40),
	CONSTRAINT PK_TAIKHOAN PRIMARY KEY (MATK),
	CONSTRAINT FK_TK_NV FOREIGN KEY(MANV) REFERENCES NHANVIEN(MANV)
)

CREATE TABLE BAOHIEM
(
	MABH NCHAR(10) NOT NULL,
	LOAIBAOHIEM NVARCHAR(100),
	TIEN FLOAT,
	CONSTRAINT PK_BAOHIEM PRIMARY KEY(MABH),
)

CREATE TABLE BAOHIEM_NHANVIEN
(
	MABH NCHAR(10),
	MANV NCHAR(10),
	NGAYCAP DATE,
	NGAYKT DATE,
	TRANGTHAI NVARCHAR(20) NOT NULL,
	CONSTRAINT PK_BHNV PRIMARY KEY(MABH,MANV),
	CONSTRAINT FK_BHNV_NV FOREIGN KEY(MANV) REFERENCES NHANVIEN(MANV),
	CONSTRAINT FK_BHNV_BH FOREIGN KEY(MABH) REFERENCES BAOHIEM(MABH)
)


CREATE TABLE TRINHDOHOCVAN
(
	MATDHV NCHAR(10) NOT NULL,
	TENTDHV NVARCHAR(100),
	LOAITRINHDO NVARCHAR(40),
	TENTRUONG NVARCHAR(130),
	NGONNGU NVARCHAR(40),
	MANV NCHAR(10),
	CONSTRAINT PK_TDHV PRIMARY KEY(MATDHV),
	CONSTRAINT FK_TDHV_NV FOREIGN KEY(MANV) REFERENCES NHANVIEN(MANV)
)

CREATE TABLE LUONG_XEPLOAI
(
	MANV NCHAR(10),
	NGAYNL DATE,
	SONGAYNGHI INT,
	LOAI NVARCHAR(20),
	CONSTRAINT PK_LUONGXL PRIMARY KEY(MANV,NGAYNL),
	CONSTRAINT FK_LUONGXL_NHANVIEN FOREIGN KEY(MANV) REFERENCES NHANVIEN(MANV)
)
----NHẬP LIỆU
INSERT INTO CHUCVU VALUES
('CV001',N'Giám đốc',6,5000),
('CV002',N'Phó giám đốc',5,5000),
('CV003',N'Trưởng phòng',4,5000),
('CV004',N'Quản lý',3,5000),
('CV005',N'Nhân viên',2,5000),
('CV006',N'Bảo vệ',2,5000)
SELECT * FROM CHUCVU

INSERT INTO PHONGBAN VALUES
('PB001',N'Phòng ban quản trị',3),
('PB002',N'Phòng tổng giám đốc',2),
('PB003',N'Phòng kiểm soát',3),
('PB004',N'Phòng ban quản lý',4),
('PB005',N'Phòng kinh doanh',4),
('PB006',N'Phòng kế toán',3),
('PB007',N'Phòng hành chính',4),
('PB008',N'Phòng ban sản xuất',10)
SELECT * FROM PHONGBAN

INSERT INTO HOPDONG VALUES
('HD001',N'HD thử việc','2022-12-14',NULL,N'Còn thời hạn'),
('HD002',N'HD làm việc thời hạn','2023-01-23',NULL,N'Còn thời hạn'),
('HD003',N'HD làm việc bán thời gian','2023-02-21','2023-11-19', N'Hết thời hạn'),
('HD004',N'HD làm việc theo dự án','2022-12-12',NULL,N'Còn thời hạn'),
('HD005',N'HD làm việc tự do','2023-02-12','2023-10-9',N'Hết thời hạn'),
('HD006',N'HD làm việc theo thực tập','2023-03-21','2023-12-1',N'Hết thời hạn')
SELECT * FROM HOPDONG

INSERT INTO NHANVIEN VALUES
('NV001',N'Nguyễn Văn A',N'Nam','1991-12-11',N'vannam@gmail.com',012345678,082451543,N'Tốt','CV001','PB002','HD002'),
('NV002',N'Nguyễn Huỳnh B',N'Nam','1991-10-11',N'huynhb@gmail.com',012345678,082451543,N'Tốt','CV002','PB002','HD002'),
('NV003',N'Võ Thị C',N'Nữ','1992-09-11',N'thic@gmail.com',012345678,082451543,N'Tốt','CV003','PB002','HD002'),
('NV004',N'Trần Van D',N'Nam','1993-12-11',N'vand@gmail.com',012345678,082451543,N'Tốt','CV004','PB003','HD002'),
('NV005',N'Võ Văn E',N'Nam','1991-12-11',N'vane@gmail.com',012345678,082451543,N'Tốt','CV004','PB003','HD002'),
('NV006',N'Trần Thi F',N'Nữ','1991-12-11',N'thif@gmail.com',012345678,082451543,N'Tốt','CV004','PB003','HD002'),
('NV007',N'Nguyễn Huỳnh G',N'Nữ','1991-12-11',N'huynhg@gmail.com',012345678,082451543,N'Tốt','CV004','PB004','HD002'),
('NV008',N'Lê Thi H',N'Nữ','1991-12-11',N'thih@gmail.com',012345678,082451543,N'Tốt','CV004','PB004','HD004'),
('NV009',N'Trần Thị L',N'Nữ','1991-12-11',N'thil@gmail.com',012345678,082451543,N'Tốt','CV004','PB004','HD004'),
('NV010',N'Nguyễn Văn N',N'Nam','1993-12-11',N'nguyenvannn@gmail.com',01435353,4258723,N'Tốt','CV004','PB004','HD002'),
('NV011',N'Huỳnh Thị M',N'Nữ','1992-05-06',N'@huynhthim@gmail.com',02342438,432794320,N'Tốt','CV006','PB007','HD002'),
('NV012',N'Võ Thị K',N'Nữ','1991-12-11',N'thik@gmail.com',012345678,082451543,N'Tốt','CV006','PB007','HD002'),
('NV013',N'Nguyễn Van T',N'Nam','1991-12-11',N'vannt@gmail.com',012345678,082451543,N'Tốt','CV006','PB007','HD002'),
('NV014',N'Trần Nguyễn O',N'Nữ','1991-12-11',N'nguyenn@gmail.com',012345678,082451543,N'Tốt','CV006','PB007','HD002'),
('NV015',N'Lê Thị P',N'Nữ','1991-12-11',N'llethib@gmail.com',012345678,082451543,N'Tốt','CV004','PB005','HD002'),
('NV016',N'Võ Nguyễn S',N'Nữ','1991-12-11',N'vonguyens@gmail.com',012345678,082451543,N'Tốt','CV005','PB008','HD002'),
('NV017',N'Nguyễn Hưu U',N'Nam','1991-12-11',N'nguyenhuuygmail.com',012345678,082451543,N'Tốt','CV005','PB008','HD004'),
('NV018',N'Lê Thị Y',N'Nữ','1991-12-11',N'lethiy@gmail.com',012345678,082451543,N'Tốt','CV005','PB008','HD003'),
('NV019',N'Trần Công E',N'Nam','1991-12-11',N'tranconge@gmail.com',012345678,082451543,N'Tốt','CV005','PB008','HD002'),
('NV020',N'Trần Huỳnh Q',N'Nam','1991-12-11',N'tranquynhq@gmail.com',012345678,082451543,N'Tốt','CV005','PB008','HD002'),
('NV021',N'Lê Văn U',N'Nam','1991-12-11',N'levanu@gmail.com',012345678,082451543,N'Tốt','CV005','PB008','HD002'),
('NV022',N'Võ Quốc B',N'Nam','1991-12-11',N'voquocb@gmail.com',012345678,082451543,N'Tốt','CV005','PB008','HD002'),
('NV023',N'Nguyễn Thị I',N'Nu','1991-12-11',N'tranthil@gmail.com',012345678,082451543,N'Tốt','CV005','PB008','HD002'),
('NV024',N'Lê Nguyễn V',N'Nam','1991-12-11',N'nguyenf@gmail.com',012345678,082451543,N'Tốt','CV005','PB008','HD005'),
('NV025',N'Võ Nguyễn P',N'Nam','1991-12-11',N'vannaaam@gmail.com',012345678,082451543,N'Tốt','CV005','PB008','HD004'),
('NV027',N'Trần Van D',N'Nam','1991-12-11',N'nnnnnam@gmail.com',012345678,082451543,N'Tốt','CV005','PB008','HD002')
SELECT * FROM NHANVIEN


INSERT INTO PHUCAP VALUES
('PC001',N'Phụ cấp nguy hiểm',100),
('PC002',N'Phụ cấp trách nhiệm',200),
('PC003',N'Phụ cấp lưu động',500),
('PC004',N'Phụ cấp thu hút',100),
('PC005',N'Phụ cấp khu vực',100),
('PC006',N'Phụ cấp chức vụ',100),
('PC007',N'Phụ cấp khác',100)
SELECT * FROM PHUCAP

INSERT INTO PHUCAP_NHANVIEN VALUES
('PC001','NV001'),
('PC002','NV002'),
('PC003','NV003'),
('PC004','NV004'),
('PC005','NV005'),
('PC006','NV006'),
('PC007','NV007')
SELECT * FROM PHUCAP_NHANVIEN

INSERT INTO LUONG VALUES
('NV001',2000,'2023-10-01'),
('NV002',18000,'2023-10-01'),
('NV003',15000,'2023-10-01'),
('NV004',120000,'2023-10-01'),
('NV005',800000,'2023-10-01'),
('NV006',700000,'2023-10-01')
SELECT * FROM LUONG

INSERT INTO THANNHAN VALUES
('TN001',N'Vo Van A',N'Cha','NV001'),
('TN002',N'Nguyễn Văn Nguyên',N'Cha','NV002'),
('TN003',N'Trần Văn Quốc',N'Cha','NV003'),
('TN004','Lê Thị Hoa',N'Mẹ','NV004')
SELECT * FROM THANNHAN


INSERT INTO TAIKHOAN VALUES
('TK001','NV001','sa','123',N'Quanly'),
('TK002','NV002','admin','123',N'Quanly'),
('TK003','NV003','manage','123',N'Nhanvien')
SELECT * FROM TAIKHOAN

INSERT INTO BAOHIEM VALUES
('BH001',N'Bảo Hiểm Tai Nam',500),
('BH002',N'Bảo Hiểm Thất Nghiệp',300),
('BH003',N'Bảo Hiểm Xã Hội',500),
('BH004',N'Bảo Hiểm Nhân Thọ',700)
SELECT * FROM BAOHIEM

INSERT INTO BAOHIEM_NHANVIEN VALUES
('BH001','NV001','2023-12-10',NULL,N'Đang dùng'),
('BH002','NV002','2022-12-10','2023-11-11',N'Hết hạn'),
('BH003','NV003','2023-12-10','2023-12-10',N'Đang xử lý'),
('BH004','NV004','2023-12-10','2023-12-10',N'Đang xử lý')
SELECT * FROM BAOHIEM_NHANVIEN

INSERT INTO TRINHDOHOCVAN VALUES
('HV001',N'Quản trị kinh doanh',N'Đại học',N'Đại học kinh tế',N'Ngôn ngữ Anh','NV001'),
('HV002',N'Kế toán',N'Đại học',N'Đại học ngoại thương',N'Ngôn ngữ Trung','NV002'),
('HV003',N'Maketing',N'Đại học',N'Đại học Hồng Bàng',N'Ngôn ngữ Anh','NV003'),
('HV004',N'Truyền thông',N'Đại học',N'Đại học kinh tế',N'Ngôn ngữ Trung','NV004'),
('HV005',N'Truyền thông',N'Đại học',N'Đại học Công Thương',N'Ngôn ngữ Nhật','NV005')





SELECT * FROM TRINHDOHOCVAN



-----------------------------------------------------TRUY VẤN DỮ LIỆU--------------------------------------------
--- Tìm danh sách nhân viên đang có hợp đồng lao động, lương trung bình hàng tháng cao hơn 15 triệu đồng
--SELECT
--    n.MANV,
--    n.TENVN,
--    l.LUONGTL
--FROM NHANVIEN n
--INNER JOIN LUONG l ON n.MANV = l.MANV
--INNER JOIN HOPDONG h ON n.MAHD = h.MAHD
--WHERE h.TRANGTHAI = N'Còn thời hạn'
--GROUP BY n.MANV, n.TENVN
--HAVING l.LUONGTL > 15000;

---Danh sách nhân viên có lương thưởng cao hơn lương cơ bản của chức vụ tương ứng
SELECT NV.MANV, NV.TENVN, CV.TENCN, CV.LUONGCB, L.LUONGTL
FROM NHANVIEN NV
JOIN CHUCVU CV ON NV.MACV = CV.MACV
JOIN LUONG L ON NV.MANV = L.MANV
WHERE L.LUONGTL > CV.LUONGCB

---Danh sách nhân viên có phụ cấp cao nhất và tên phụ cấp tương ứng:
SELECT NV.MANV, NV.TENVN, PC.TENPC, PC.TIENPC
FROM NHANVIEN NV
JOIN PHUCAP_NHANVIEN PCNV ON NV.MANV = PCNV.MANV
JOIN PHUCAP PC ON PCNV.MAPC = PC.MAPC
WHERE PC.TIENPC = (SELECT MAX(TIENPC) FROM PHUCAP)

---Danh sách nhân viên có hợp đồng sắp hết hạn trong vòng 30 ngày:
SELECT NV.MANV, NV.TENVN, HD.NGAYKT
FROM NHANVIEN NV
JOIN HOPDONG HD ON NV.MAHD = HD.MAHD
WHERE DATEDIFF(DAY, GETDATE(), HD.NGAYKT) <= 30

---Danh sách nhân viên có tuổi lớn nhất trong mỗi phòng ban:
SELECT PB.TENPB, NV.TENVN, NV.NGAYSINH, DATEDIFF(YEAR, NV.NGAYSINH, GETDATE()) AS TUOI
FROM PHONGBAN PB
JOIN NHANVIEN NV ON PB.MAPB = NV.MAPB
WHERE NV.NGAYSINH = (SELECT MAX(NGAYSINH) FROM NHANVIEN WHERE MAPB = NV.MAPB)


---------------------------------------RÀNG BUỘC TOÀN VẸN-----------------------------
ALTER TABLE CHUCVU ADD CONSTRAINT UNIQUE_TENCN UNIQUE (TENCN);
ALTER TABLE PHONGBAN ADD CONSTRAINT UNIQUE_TENPB UNIQUE (TENPB);
ALTER TABLE PHUCAP ADD CONSTRAINT UNIQUE_TENPC UNIQUE (TENPC);

ALTER TABLE NHANVIEN ADD CONSTRAINT DEFAULT_GIOITINH DEFAULT N'Nam' FOR GIOITINH;
ALTER TABLE HOPDONG ADD CONSTRAINT DEFAULT_TRANGTHAI_HOPDONG DEFAULT N'Còn thời hạn' FOR TRANGTHAI;
ALTER TABLE LUONG ADD CONSTRAINT DEFAULT_NGAYLL DEFAULT GETDATE() FOR NGAYLL;

ALTER TABLE BAOHIEM_NHANVIEN ADD CONSTRAINT DEFAULT_NGAYCAP DEFAULT GETDATE() FOR NGAYCAP;
ALTER TABLE BAOHIEM_NHANVIEN ADD CONSTRAINT DEFAULT_NGAYKT DEFAULT DATEADD(YEAR, 1, GETDATE()) FOR NGAYKT;
ALTER TABLE BAOHIEM_NHANVIEN ADD CONSTRAINT DEFAULT_TRANGTHAI_BAOHIEM DEFAULT N'Còn thời hạn' FOR TRANGTHAI;

ALTER TABLE TRINHDOHOCVAN ADD CONSTRAINT DEFAULT_LOAITRINHDO DEFAULT N'Chưa xác định' FOR LOAITRINHDO;
ALTER TABLE LUONG_XEPLOAI ADD CONSTRAINT DEFAULT_SONGAYNGHI DEFAULT 0 FOR SONGAYNGHI;

ALTER TABLE LUONG ADD CONSTRAINT CK_LUONG_NGAYLL CHECK (DAY(NGAYLL) = DAY(DATEADD(day, -1, DATEADD(month, DATEDIFF(month, 0, NGAYLL) + 1, 0))))

------------------------------------TẠO VIEW---
---View hiển thị danh sách nhân viên và thông tin hợp đồng của họ:
CREATE VIEW ThongTinNhanVien AS
SELECT NV.MANV, NV.TENVN, NV.GIOITINH, NV.NGAYSINH, NV.EMAIL, CV.TENCN, PB.TENPB, HD.TENHD
FROM NHANVIEN NV
JOIN CHUCVU CV ON NV.MACV = CV.MACV
JOIN PHONGBAN PB ON NV.MAPB = PB.MAPB
JOIN HOPDONG HD ON NV.MAHD = HD.MAHD;

SELECT * FROM ThongTinNhanVien;
---View hiển thị danh sách nhân viên và thông tin trình độ học vấn của họ:
CREATE VIEW ThongTinHocVan AS
SELECT NV.MANV, NV.TENVN, TDHV.TENTDHV, TDHV.LOAITRINHDO
FROM NHANVIEN NV
JOIN TRINHDOHOCVAN TDHV ON NV.MANV = TDHV.MANV;

SELECT * FROM ThongTinHocVan;

--TAO RA 2 TAI KHOAN NHANVIEN2 VA NHANVIEN3
USE MASTER
GO 
CREATE LOGIN NHANVIEN2
	WITH PASSWORD = 'NHANVIEN2',
	CHECK_EXPIRATION = OFF,
	CHECK_POLICY = OFF,
	DEFAULT_DATABASE = QuanLiNhanSu_Nhom2
GO
USE QuanLiNhanSu_Nhom2
GO
CREATE USER NHANVIEN2
	FOR LOGIN NHANVIEN2


USE MASTER
GO 
CREATE LOGIN NHANVIEN3
	WITH PASSWORD = 'NHANVIEN3',
	CHECK_EXPIRATION = OFF,
	CHECK_POLICY = OFF,
	DEFAULT_DATABASE = QuanLiNhanSu_Nhom2
GO
USE QuanLiNhanSu_Nhom2
GO
CREATE USER NHANVIEN3
	FOR LOGIN NHANVIEN

--CAP QUYEN CHO USER
GRANT SELECT, INSERT, UPDATE
ON NHANVIEN TO NHANVIEN2
GO

--THU HOI QUYEN INSERT UPDATE CUA USER NHANVIEN2
REVOKE INSERT, UPDATE
ON NHANVIEN 
FROM NHANVIEN2


--TAO RA NHOM QUYEN
SP_ADDROLE NHOM2

GRANT SELECT
ON LUONG
TO NHOM2

SP_ADDROLEMEMBER NHOM2, NHANVIEN2
SP_ADDROLEMEMBER NHOM2, NHANVIEN3

SP_DROPROLEMEMBER NHOM2, NHANVIEN3

SP_DROPROLE NHOM2



BACKUP DATABASE qlynhansu TO DISK = 'C:\Code\THHQTCSDL\Backup\FullBackup.bak';

BACKUP DATABASE qlynhansu TO DISK = 'C:\Code\THHQTCSDL\Backup\DifferentialBackup.bak' WITH DIFFERENTIAL;

BACKUP LOG qlynhansu TO DISK = 'C:\Code\THHQTCSDL\Backup\LogBackup1.bak';

BACKUP LOG qlynhansu TO DISK = 'C:\Code\THHQTCSDL\Backup\LogBackup2.bak';

RESTORE DATABASE qlynhansu FROM DISK = 'C:\Code\THHQTCSDL\Backup\LogBackup2.bak' WITH NORECOVERY;

RESTORE LOG qlynhansu FROM DISK = 'C:\Code\THHQTCSDL\Backup\LogBackup1.bak' WITH NORECOVERY;
RESTORE LOG qlynhansu FROM DISK = 'C:\Code\THHQTCSDL\Backup\LogBackup2.bak' WITH RECOVERY;


-- Lấy tên nhân viên và lương thực lãnh
DECLARE @MANV NVARCHAR(50), @LUONGTL FLOAT
DECLARE CURSOR_NHANVIEN CURSOR FOR
SELECT MANV, LUONGTL FROM LUONG

OPEN CURSOR_NHANVIEN;
FETCH NEXT FROM CURSOR_NHANVIEN INTO @MANV, @LUONGTL;

WHILE @@FETCH_STATUS = 0
BEGIN
    PRINT 'MANV: ' + @MANV + ', LUONGTL: ' + CAST(@LUONGTL AS NVARCHAR(50));
    FETCH NEXT FROM CURSOR_NHANVIEN INTO @MANV, @LUONGTL;
END;

CLOSE CURSOR_NHANVIEN;
DEALLOCATE CURSOR_NHANVIEN;



--ĐỌC DỮ LIỆU BẢNG TRINHDOHOCVAN LỌC RA BẰNG CẤP BẰNG NGÔN NGỮ ANH
DECLARE @MANV NVARCHAR(10), @NGONNGU NVARCHAR(40)
DECLARE CURSOR_NGONNGU CURSOR FOR
SELECT NGONNGU, MANV FROM TRINHDOHOCVAN 
OPEN CURSOR_NGONNGU
FETCH NEXT FROM CURSOR_NGONNGU INTO @NGONNGU, @MANV

WHILE @@FETCH_STATUS = 0
BEGIN
	IF(@NGONNGU = N'Ngôn ngữ Anh')
		PRINT N'MÃ NHÂN VIÊN: ' + @MANV +  @NGONNGU
		FETCH NEXT FROM CURSOR_NGONNGU INTO @NGONNGU, @MANV
END
CLOSE CURSOR_NGONNGU
DEALLOCATE CURSOR_NGONNGU

--XUAT RA DONG DAU BANG PHUCAP
--DECLARE @MAPC NCHAR(10), @TENPC NVARCHAR(50), @TIENPC FLOAT
--DECLARE CURSOR_PHUCAP CURSOR FOR
--SELECT MAPC, TENPC, TIENPC FROM PHUCAP
--OPEN CURSOR_PHUCAP
--FETCH LAST FROM CURSOR_PHUCAP INTO @MAPC, @TENPC, @TIENPC
--WHILE @@FETCH_STATUS = 0
--BEGIN 
--	PRINT N'Mã phụ cấp: ' + @MAPC + N'Tên phụ cấp: ' + @TENPC + N'Tiền phụ cấp: ' + CAST(@TIENPC AS NVARCHAR)
--	FETCH  LAST FROM CURSOR_PHUCAP INTO @MAPC, @TENPC, @TIENPC
--END
--CLOSE CURSOR_PHUCAP
--DEALLOCATE CURSOR_PHUCAP




----------------------------------------------------TRIGGER----------------------------------------------------------

--Cập Nhật Số Lượng Nhân Viên Trong Phòng Ban

CREATE TRIGGER UPDATE_SLSV_LOP
ON NHANVIEN
AFTER INSERT,UPDATE,DELETE
AS
BEGIN
 UPDATE PHONGBAN
 SET SOLUONG = (SELECT COUNT(*) FROM NHANVIEN WHERE NHANVIEN.MAPB = PHONGBAN.MAPB)
END


--Cập Nhật Loại Lương
/*
Cập nhật xếp loại dựa vào số ngày nghĩ của nhân viên Nếu Nhân viên nghĩ dưới 
3 ngày thì Thuộc Loại "Giỏi", Nếu Nghĩ Dưới 7 Ngày Thì Cập Nhật Loại "Khá",
Dưới 10 Ngày Thì Cập Nhật Loại Trung Bình, Còn Lại Là Loại "Yếu"
*/


CREATE TRIGGER UPDATE_XEPLOAILUONG
ON LUONG_XEPLOAI
AFTER INSERT,UPDATE
AS
BEGIN
	DECLARE @MaNV char(10), @NgayNL date, @SoNgayNghi int
	SET @MaNV = (select i.MaNV from inserted i)
	SET @NgayNL = (select i.NgayNL from inserted i)
	SET @SoNgayNghi = (select i.SoNgayNghi from inserted i)
	IF(@SoNgayNghi < 3)
	BEGIN
		UPDATE LUONG_XEPLOAI
		SET Loai = 'Giỏi'
		WHERE MaNV = @MaNV AND NgayNL = @NgayNL
	END
	ELSE IF(@SoNgayNghi < 7)
	BEGIN
		UPDATE LUONG_XEPLOAI
		SET Loai = 'Khá'
		WHERE MaNV = @MaNV AND NgayNL = @NgayNL
	END
	ELSE IF(@SoNgayNghi < 10)
	BEGIN
		UPDATE LUONG_XEPLOAI
		SET Loai = 'Trung Bình'
		WHERE MaNV = @MaNV AND NgayNL = @NgayNL
	END
	ELSE
	BEGIN
		UPDATE LUONG_XEPLOAI
		SET Loai = 'Yếu'
		WHERE MaNV = @MaNV AND NgayNL = @NgayNL
	END
END



--Tính  Lương Nhân Viên


CREATE TRIGGER UPDATE_LuongNhanVien
ON Luong
AFTER INSERT,UPDATE
AS
BEGIN
	DECLARE @MaNV char(10), @NgayNL date, @Loai nvarchar(50),@TongTienBH float,@TongTienPC float,@checkBH int, @checkPC int
	SET @MaNV = (select i.MaNV from inserted i)
	SET @NgayNL = (select i.NGAYLL from inserted i)
	SET @Loai = (SELECT Loai FROM LUONG_XEPLOAI l WHERE l.MaNV = @MaNV AND l.NgayNL = @NgayNL)
	SET @checkPC = (SELECT COUNT(*) FROM dbo.PHUCAP INNER JOIN dbo.PHUCAP_NHANVIEN
	ON dbo.PHUCAP.MAPC = dbo.PHUCAP_NHANVIEN.MAPC
	WHERE MANV = @MaNV)
	if (@checkPC != 0)
	BEGIN
	SET @TongTienPC = (SELECT SUM(TIENPC) FROM dbo.PHUCAP INNER JOIN dbo.PHUCAP_NHANVIEN
	ON dbo.PHUCAP.MAPC = dbo.PHUCAP_NHANVIEN.MAPC
	WHERE MANV = @MaNV)
	END
	ELSE
	BEGIN
	SET @TongTienPC = 0;
	END

	SET @checkBH = (SELECT COUNT(*) FROM dbo.BAOHIEM INNER JOIN
                  dbo.BAOHIEM_NHANVIEN ON dbo.BAOHIEM.MABH = dbo.BAOHIEM_NHANVIEN.MABH
				  WHERE MANV = @MaNV)
	if (@checkBH != 0)
	BEGIN
	SET @TongTienBH = (SELECT SUM(TIEN) FROM dbo.BAOHIEM INNER JOIN dbo.BAOHIEM_NHANVIEN ON dbo.BAOHIEM.MABH = dbo.BAOHIEM_NHANVIEN.MABH WHERE MANV = @MaNV)
	END
	ELSE
	BEGIN
	SET @TongTienBH = 0;
	END
	IF(@Loai = 'Giỏi')
	BEGIN
		UPDATE LUONG
		SET LUONGTL = (SELECT (BACLUONG*LUONGCB) FROM dbo.CHUCVU INNER JOIN dbo.NHANVIEN ON dbo.CHUCVU.MACV = dbo.NHANVIEN.MACV where MANV = @MaNV) + @TongTienPC - @TongTienBH
	END

	ELSE IF(@Loai = 'Khá')
	BEGIN
		UPDATE LUONG
		SET LUONGTL = ((SELECT (BACLUONG*LUONGCB) FROM dbo.CHUCVU INNER JOIN dbo.NHANVIEN ON dbo.CHUCVU.MACV = dbo.NHANVIEN.MACV where MANV = @MaNV) + @TongTienPC - @TongTienBH) * 0.75
	END
	ELSE IF(@Loai = 'Trung Bình')
	BEGIN
		UPDATE LUONG
		SET LUONGTL = ((SELECT (BACLUONG*LUONGCB) FROM dbo.CHUCVU INNER JOIN dbo.NHANVIEN ON dbo.CHUCVU.MACV = dbo.NHANVIEN.MACV where MANV = @MaNV) + @TongTienPC - @TongTienBH) * 0.5
	END
	ELSE
	BEGIN
	UPDATE LUONG
		SET LUONGTL = 0;
	END
END



------------------------------------Produce------------------------------ Chưa thử------------------
-- Tạo thủ tục để thêm BAOHIEM mới và tự động tăng mã BAO HIEM
CREATE PROCEDURE fc_BAOHIEM (@lOAIBH NVARCHAR(30),@TIEN FLOAT)
AS
BEGIN
    SET NOCOUNT ON;

    -- Biến để lưu trữ mã BH mới
    DECLARE @NewBHID CHAR(10);

    -- Lấy mã BH mới bằng cách tăng giá trị của mã BH cao nhất lên 1
    SELECT @NewBHID  = 'BH' + RIGHT('000' + CAST(ISNULL(SUBSTRING(MAX(MABH), 3, 3), 0) + 1 AS VARCHAR(3)), 3)
    FROM BAOHIEM;

    -- Thêm BH mới vào bảng BH
    INSERT INTO BAOHIEM (MABH, LOAIBAOHIEM,TIEN)
    VALUES (@NewBHID,@lOAIBH,@TIEN)

    -- In thông báo và trả về mã BH mới
    PRINT 'BH đã được thêm thành công. Mã BH mới: ' + @NewBHID;
    SELECT @NewBHID AS NewBHID;
END;

EXEC fc_BAOHIEM
    @lOAIBH = 'Loại 1',
    @TIEN = 97000
------------ Viết thủ tục thêm PHONGBAN----
CREATE PROCEDURE sp_ThemPB
		(
			@MaPB CHAR(10),
			@TePB NVARCHAR(30),
			@SL INT
		)
AS
BEGIN
    IF EXISTS (SELECT * FROM PHONGBAN WHERE MAPB = @MaPB)
    BEGIN
        PRINT N'DA CO PHONG BAN';
        RETURN;
    END
    ELSE
        INSERT INTO PHONGBAN(MAPB, TENPB,SOLUONG)
        VALUES (@MaPB, @TePB,@SL);
END;
--Gọi thủ tục và truyền các tham số cho sản phẩm có mã 'SP001'
EXEC sp_ThemPB 
@MaPB='SP009',
@TePB=N'Phòng hành chính',
@SL= '10'
--- Viết thủ tục xóa PHONGBAN----
CREATE PROCEDURE sp_XoaPHONGBAN 
(
    @MaPB CHAR(10)
)
AS
BEGIN
    DELETE FROM PHONGBAN WHERE MAPB = @MaPB;
END;

-- Thực hiện stored procedure sp_XoaSanPham
EXEC sp_XoaPHONGBAN 'SP009';
SELECT * FROM PHONGBAN

---proc cập nhật THONG TIN THAN NHAN
CREATE PROCEDURE UpdateThanNhan
	@MaTN NCHAR(10),
	@Hoten NVARCHAR(50),
	@Quanhe NVARCHAR(15),
	@Manv NCHAR(10)
AS
BEGIN
    UPDATE THANNHAN
	SET MANV = @Manv,
		HOTEN = @Hoten,
		QUANHE = @Quanhe
    WHERE MATN = @MaTN
END;

EXEC UpdateTHANNHAN
@MaTN = 'TN001',
@Hoten= 'LE LE LE',
@Quanhe = 'ME',
@Manv = 'NV002'
SELECT * FROM THANNHAN
-- Tạo stored procedure để thêm hợp đồng mới
CREATE PROCEDURE AddHopDong
    @MAHD NCHAR(10),
    @TENHD NVARCHAR(30),
    @NGAYBD DATE,
    @NGAYKT DATE,
    @TRANGTHAI NVARCHAR(20)
AS
BEGIN
    INSERT INTO HOPDONG (MAHD, TENHD, NGAYBD, NGAYKT, TRANGTHAI)
    VALUES (@MAHD, @TENHD, @NGAYBD, @NGAYKT, @TRANGTHAI);
END;

EXEC AddHopDong 'HD008', N'HD làm việc tự do', '2023-01-01', '2023-03-17', N'Còn thời hạn';

SELECT * FROM HOPDONG
--Xem Tất Cả Chức Vụ:
CREATE PROCEDURE AllChucVu
AS
BEGIN
    SELECT * FROM CHUCVU;
END;
EXEC AllChucVu
--Xem Chức Vụ Theo Mã Chức Vụ:
-- Tạo stored procedure để xem chức vụ theo mã chức vụ
CREATE PROCEDURE ChucVuTHEOMaCV
    @MACV NCHAR(10)
AS
BEGIN
    SELECT * FROM CHUCVU WHERE MACV = @MACV;
END;

EXEC ChucVuTHEOMaCV 'CV001';
DROP PROC ChucVuTHEOMaCV
SELECT * FROM CHUCVU


-- Tạo stored procedure để cập nhật thông tin chức vụ
CREATE PROCEDURE UpdateChucVu
    @MACV NCHAR(10),
    @TENCN NVARCHAR(30),
    @BACLUONG FLOAT,
    @LUONGCB FLOAT
AS
BEGIN
    UPDATE CHUCVU
    SET TENCN = @TENCN, BACLUONG = @BACLUONG, LUONGCB = @LUONGCB
    WHERE MACV = @MACV;
END;

EXEC UpdateChucVu 'CV001', 'Chức vụ mới', 11, 5500000;

-----PROC TIM NHAN VIEN
CREATE PROCEDURE TimNhanVien
    @MaNhanVien NCHAR(10)
AS
BEGIN
    SELECT *
    FROM NHANVIEN
    WHERE MANV = @MaNhanVien;
END

-- Gọi thủ tục TimNhanVien và truyền mã nhân viên cần tìm kiếm
EXEC TimNhanVien @MaNhanVien = 'NV001';



------------------------------------------------------------------Function------------------------------------------------------------------------
--- Lấy danh sách nhân viên có hợp đồng hết hạn trong một tháng cụ thể:
CREATE FUNCTION NHANVIENCOHOPDONGHETHAN(@Month INT, @Year INT)
RETURNS TABLE
AS
RETURN
(
    SELECT NV.*, HD.NGAYKT AS N'NGÀY KẾT THÚC HỢP ĐỒNG'
    FROM NHANVIEN NV
    INNER JOIN HOPDONG HD ON NV.MAHD = HD.MAHD
    WHERE MONTH(HD.NGAYKT) = @Month AND YEAR(HD.NGAYKT) = @Year
)

SELECT *
FROM dbo.NHANVIENCOHOPDONGHETHAN('11','2023');
--- Tính số lượng nhân viên theo giới tính (GIOITINH) và chức vụ (MACV):
CREATE FUNCTION SONHANVIENTHEOGIOITINHVACHUCVU(@GioiTinh NVARCHAR(3), @MACV NCHAR(10))
RETURNS INT
AS
BEGIN
    DECLARE @Count INT;
    SELECT @Count = COUNT(*)
    FROM NHANVIEN
    WHERE GIOITINH = @GioiTinh AND MACV = @MACV;
    RETURN @Count;
END

SELECT dbo.SONHANVIENTHEOGIOITINHVACHUCVU(N'Nam','CV004');

--- tính tuổi trung bình của nhân viên trong một phòng ban (MAPB):
CREATE FUNCTION TUOITRUNGBINHCUANHANVIENTRONG1PHONGBAN(@MAPB NCHAR(10))
RETURNS FLOAT
AS
BEGIN
    DECLARE @AverageAge FLOAT;
    SELECT @AverageAge = AVG(DATEDIFF(YEAR, NGAYSINH, GETDATE()))
    FROM NHANVIEN
    WHERE MAPB = @MAPB;
    RETURN @AverageAge;
END

DECLARE @AvgAge FLOAT;
SET @AvgAge = dbo.TUOITRUNGBINHCUANHANVIENTRONG1PHONGBAN('PB007');
SELECT @AvgAge;

---
CREATE FUNCTION TAIKHOANTONTAI(@username NVARCHAR(40))
RETURNS BIT
AS
BEGIN
    DECLARE @usernameExists BIT;

    SELECT @usernameExists = CASE WHEN EXISTS (SELECT * FROM TAIKHOAN WHERE TAIKHOAN = @username) THEN 1 ELSE 0 END;

    RETURN @usernameExists;
END;
DECLARE @usernameExists BIT;
SET @usernameExists = dbo.TAIKHOANTONTAI(N'admin');
SELECT @usernameExists;

--- Get employee access level:
CREATE FUNCTION QUYENCUATAIKHOAN(@username NVARCHAR(40))
RETURNS NVARCHAR(40)
AS
BEGIN
    DECLARE @accessLevel NVARCHAR(40);

    SELECT @accessLevel = QUYEN
    FROM TAIKHOAN
    WHERE TAIKHOAN = @username;

    RETURN @accessLevel;
END;

DECLARE @accessLevel NVARCHAR(40);
SET @accessLevel = dbo.QUYENCUATAIKHOAN('admin');
SELECT @accessLevel;
SELECT MAPB FROM PHONGBAN

--CREATE TRIGGER TRG_AUTO_GENERATE_MANV
--ON NHANVIEN
--AFTER INSERT
--AS
--BEGIN
--    -- Kiểm tra xem đã có nhân viên nào trong bảng chưa
--    IF NOT EXISTS (SELECT 1 FROM NHANVIEN)
--    BEGIN
--        -- Nếu chưa có nhân viên nào, gán mã nhân viên đầu tiên là "NV001"
--        UPDATE NHANVIEN
--        SET MANV = 'NV001'
--        WHERE MANV IS NULL
--    END
--    ELSE
--    BEGIN
--        -- Nếu đã có nhân viên trong bảng, lấy mã nhân viên cuối cùng trong dữ liệu
--        DECLARE @LastManv NCHAR(10)
--        SELECT @LastManv = MAX(MANV)
--        FROM NHANVIEN

--        -- Lấy phần số từ mã nhân viên cuối cùng
--        DECLARE @LastManvNumber INT
--        SET @LastManvNumber = CAST(RIGHT(@LastManv, 3) AS INT)

--        -- Tạo mã nhân viên mới
--        DECLARE @NewManv NCHAR(10)
--        SET @NewManv = 'NV' + RIGHT('000' + CAST(@LastManvNumber + 1 AS VARCHAR(3)), 3)

--        -- Cập nhật mã nhân viên cho các dòng mới được chèn vào
--        UPDATE NHANVIEN
--        SET MANV = @NewManv
--        WHERE MANV IS NULL
--    END
--END
--CREATE FUNCTION dbo.GetTenVNByMaNV
--(
--    @MANV NCHAR(10)
--)
--RETURNS NVARCHAR(40)
--AS
--BEGIN
--    DECLARE @TENVN NVARCHAR(40);
    
--    SELECT @TENVN = TENVN
--    FROM NHANVIEN
--    WHERE MANV = @MANV;
    
--    RETURN @TENVN;
--END

CREATE PROCEDURE GetNhanVien
AS
BEGIN
    SELECT * FROM NhanVien;
END

CREATE PROCEDURE InsertNhanVien
    @Manv NVARCHAR(10),
    @Tenvn NVARCHAR(100),
    @Gioitinh NVARCHAR(10),
    @Ngaysinh DATE,
    @Email NVARCHAR(100),
    @Sdt NVARCHAR(20),
    @Cccd NVARCHAR(20),
    @Macv NCHAR(10),
    @Mapb NCHAR(10),
    @Mahd NCHAR(10)
AS
BEGIN
    INSERT INTO NHANVIEN (MANV, TENVN, GIOITINH, NGAYSINH, EMAIL, SDT, CCCD, MACV, MAPB, MAHD)
    VALUES (@Manv, @Tenvn, @Gioitinh, @Ngaysinh, @Email, @Sdt, @Cccd, @Macv, @Mapb, @Mahd);
END

CREATE PROCEDURE DeleteNhanVien
    @Manv NVARCHAR(10)
AS
BEGIN
    SET NOCOUNT ON;

    DELETE FROM NHANVIEN WHERE MANV = @Manv;
END

CREATE PROCEDURE UpdateNhanVien
    @Manv NVARCHAR(10),
    @Tenvn NVARCHAR(100),
    @Gioitinh NVARCHAR(10),
    @Ngaysinh DATE,
    @Email NVARCHAR(100),
    @Sdt NVARCHAR(20),
    @Cccd NVARCHAR(20),
    @Macv NCHAR(10),
    @Mapb NCHAR(10),
    @Mahd NCHAR(10)
AS
BEGIN
    SET NOCOUNT ON;

    UPDATE NHANVIEN
    SET TENVN = @Tenvn, GIOITINH = @Gioitinh, NGAYSINH = @Ngaysinh, EMAIL = @Email,
        SDT = @Sdt, CCCD = @Cccd, MACV = @Macv, MAPB = @Mapb, MAHD = @Mahd
    WHERE MANV = @Manv;
END

CREATE FUNCTION GetEmployeeInfo(@MANV NCHAR(10))
RETURNS TABLE
AS
RETURN
(
    SELECT * FROM NHANVIEN WHERE MANV = @MANV
)

SELECT * FROM dbo.GetEmployeeInfo ('NV027')

CREATE PROCEDURE TimKiemNhanVien
    @Manv NVARCHAR(10)
AS
BEGIN
    SELECT * FROM NhanVien WHERE Manv = @Manv
END

CREATE FUNCTION GetEmployeeWithAllowance()
RETURNS TABLE
AS
RETURN (
    SELECT NV.MANV, NV.TENVN, PC.MAPC, PC.TENPC
    FROM NHANVIEN NV
    INNER JOIN PHUCAP_NHANVIEN PCNV ON NV.MANV = PCNV.MANV
    INNER JOIN PHUCAP PC ON PCNV.MAPC = PC.MAPC
);

SELECT * FROM GetEmployeeWithAllowance();

CREATE PROCEDURE ThemPhuCapChoNhanVien
    @MaNV NCHAR(10),
    @MaPC NCHAR(10)
AS
BEGIN
    INSERT INTO PHUCAP_NHANVIEN (MAPC, MANV)
    VALUES (@MaPC, @MaNV)
END

CREATE FUNCTION GetTenPhuCap(@mapc NCHAR(10))
RETURNS NVARCHAR(50)
AS
BEGIN
    DECLARE @tenpc NVARCHAR(50)
    
    SELECT @tenpc = TENPC
    FROM PHUCAP
    WHERE MAPC = @mapc
    
    RETURN @tenpc
END

CREATE PROCEDURE XoaPhuCapChoNhanVien
    @MaNV NCHAR(10),
    @MaPC NCHAR(10)
AS
BEGIN
    DELETE FROM PHUCAP_NHANVIEN
    WHERE MANV = @MaNV AND MAPC = @MaPC
END

CREATE FUNCTION TinhTongTienPhuCap(@MANV NCHAR(10))
RETURNS FLOAT
AS
BEGIN
    DECLARE @TongTienPhuCap FLOAT;

    -- Tính tổng tiền phụ cấp cho nhân viên với MANV tương ứng
    SELECT @TongTienPhuCap = SUM(TIENPC)
    FROM PHUCAP_NHANVIEN PN
    JOIN PHUCAP PC ON PN.MAPC = PC.MAPC
    WHERE PN.MANV = @MANV;

    -- Trả về tổng tiền phụ cấp
    RETURN @TongTienPhuCap;
END;

SELECT dbo.TinhTongTienPhuCap('NV001') AS TongTienPhuCap;

-- Tạo hàm
CREATE FUNCTION LayThongTinNhanVien()
RETURNS TABLE
AS
RETURN (
    -- Truy vấn dữ liệu
	SELECT NVAN.MANV, NVAN.TENVN, NVAN.MACV, CV.LUONGCB, LUONG_XEPLOAI.NGAYNL, LUONG_XEPLOAI.SONGAYNGHI, LUONG_XEPLOAI.LOAI, LUONG.LUONGTL, dbo.TinhTongTienPhuCap(NVAN.MANV) AS TONGPHUCAP
	FROM NHANVIEN NVAN
	JOIN LUONG ON NVAN.MANV = LUONG.MANV
	JOIN LUONG_XEPLOAI ON NVAN.MANV = LUONG_XEPLOAI.MANV
	JOIN CHUCVU CV ON NVAN.MACV = CV.MACV
);

-- Sử dụng hàm
SELECT * FROM LayThongTinNhanVien();

INSERT INTO LUONG_XEPLOAI VALUES ('NV001','2023-01-01',5,'Gioi')
INSERT INTO LUONG_XEPLOAI VALUES ('NV002','2023-01-01',3,'Khá')
INSERT INTO LUONG_XEPLOAI VALUES ('NV003','2023-01-01',2,'Trung bình')

select MANV from TAIKHOAN where TaiKhoan='sa' and MATKHAU='123'

CREATE PROCEDURE Select_PhuCap
AS
BEGIN
    SELECT * FROM PHUCAP
END;
EXEC Select_PhuCap

CREATE PROCEDURE Xoa_PhuCap(@MaPC nchar(10))
AS
BEGIN
    DELETE FROM PHUCAP WHERE MAPC = @MaPC
END;


CREATE PROCEDURE Sua_PhuCap(@MaPC nchar(10), @TenPC nvarchar(50), @TienPC float)
AS
BEGIN
    UPDATE PHUCAP SET TENPC = N'@TenPC' , TIENPC = @TienPC WHERE MAPC = @MaPC
END;

CREATE PROCEDURE Them_PhuCap(@MaPC nchar(10), @TenPC nvarchar(50), @TienPC float)
AS
BEGIN
    INSERT INTO PHUCAP VALUES(@MaPC,@TenPC,@TienPC)
END;

-- Procedure to insert a new record into the LUONG table
CREATE PROCEDURE insertLuong
(
    @manv nchar(10),
    @luongtl float,
    @ngayll date
)
AS
BEGIN
    INSERT INTO LUONG (MANV, LUONGTL, NGAYLL)
    VALUES (@manv, @luongtl, @ngayll)
END

-- Procedure to update an existing record in the LUONG table
CREATE PROCEDURE updateLuong
(
    @maluong int,
    @manv nchar(10),
    @luongtl float,
    @ngayll date
)
AS
BEGIN
    UPDATE LUONG
    SET LUONGTL = @luongtl, NGAYLL = @ngayll
    WHERE MALUONG = @maluong AND MANV = @manv
END

-- Procedure to delete a record from the LUONG table
CREATE PROCEDURE deleteLuong
(
    @maluong int,
    @manv nchar(10)
)
AS
BEGIN
    DELETE FROM LUONG
    WHERE MALUONG = @maluong AND MANV = @manv
END
CREATE PROCEDURE UpdateSongaynghi
    @MANV NCHAR(10),
    @NGAYNL DATE
AS
BEGIN
    UPDATE LUONG_XEPLOAI
    SET SONGAYNGHI = (SELECT SONGAYNGHI FROM LUONG_XEPLOAI WHERE MANV = @MANV AND NGAYNL = @NGAYNL)
    WHERE MANV = @MANV;
END
CREATE PROCEDURE insertLuong_XepLoai
(
    @MANV NCHAR(10),
    @NGAYNL DATE,
    @SONGAYNGHI INT
)
AS
BEGIN

    INSERT INTO LUONG_XEPLOAI (MANV, NGAYNL, SONGAYNGHI)
    VALUES (@MANV, @NGAYNL, @SONGAYNGHI);
    
END
CREATE PROCEDURE updateLuong_XepLoai
(
    @MANV NCHAR(10),
    @NGAYNL DATE,
    @SONGAYNGHI INT
)
AS
BEGIN
    UPDATE LUONG_XEPLOAI
    SET SONGAYNGHI = @SONGAYNGHI
    WHERE MANV = @MANV AND NGAYNL = @NGAYNL;
END
--CREATE TRIGGER Trigger_TinhLuongTL
--ON LUONG
--FOR INSERT, UPDATE
--AS
--BEGIN
--	IF EXISTS (SELECT * FROM inserted)
--	BEGIN
--		DECLARE @Loai NVARCHAR(20) -- Define the datatype of @Loai variable
--		DECLARE @TongTienPC FLOAT -- Define the datatype of @TongTienPC variable

--		-- Assign values to @Loai and @TongTienPC variables based on your logic
--	SET @Loai = (SELECT LUONG_XEPLOAI.LOAI FROM LUONG_XEPLOAI
--		             INNER JOIN inserted ON LUONG_XEPLOAI.MANV = inserted.MANV AND LUONG_XEPLOAI.NGAYNL = inserted.NGAYLL WHERE LUONG_XEPLOAI.MANV IN (SELECT MANV FROM inserted) AND inserted.NGAYLL = LUONG_XEPLOAI.NGAYNL)
--		SET @TongTienPC = (SELECT SUM(PHUCAP.TIENPC) FROM PHUCAP
--		                   INNER JOIN PHUCAP_NHANVIEN ON PHUCAP.MAPC = PHUCAP_NHANVIEN.MAPC
--		                   INNER JOIN inserted ON PHUCAP_NHANVIEN.MANV = inserted.MANV
--						   	WHERE PHUCAP_NHANVIEN.MANV IN (SELECT MANV FROM inserted)
--						   )

--		UPDATE LUONG
--		SET LUONGTL = 
--			CASE 
--				WHEN @Loai = 'Giỏi' THEN ((SELECT (BACLUONG*LUONGCB) FROM CHUCVU INNER JOIN NHANVIEN ON CHUCVU.MACV = NHANVIEN.MACV
--				                            WHERE NHANVIEN.MANV = inserted.MANV) + @TongTienPC)
--				WHEN @Loai = 'Khá' THEN ((SELECT (BACLUONG*LUONGCB) FROM CHUCVU INNER JOIN NHANVIEN ON CHUCVU.MACV = NHANVIEN.MACV
--				                          WHERE NHANVIEN.MANV = inserted.MANV) + @TongTienPC) * 0.75
--				WHEN @Loai = 'Trung Bình' THEN ((SELECT (BACLUONG*LUONGCB) FROM CHUCVU INNER JOIN NHANVIEN ON CHUCVU.MACV = NHANVIEN.MACV
--				                                   WHERE NHANVIEN.MANV = inserted.MANV) + @TongTienPC) * 0.5
--				ELSE 0
--			END
--		FROM LUONG
--		INNER JOIN inserted ON LUONG.MANV = inserted.MANV AND LUONG.NGAYLL = inserted.NGAYLL
--	END
--END

SELECT SUM(TIENPC) FROM PHUCAP INNER JOIN PHUCAP_NHANVIEN ON PHUCAP.MAPC = PHUCAP_NHANVIEN.MAPC WHERE MANV = 'NV001'
SELECT LUONG_XEPLOAI.LOAI
FROM LUONG_XEPLOAI
WHERE LUONG_XEPLOAI.MANV = 'NV002' AND LUONG_XEPLOAI.NGAYNL = '2023-01-01'

CREATE PROCEDURE insertTaiKhoan
    @MATK NCHAR(10),
    @MANV NCHAR(10),
    @TAIKHOAN NVARCHAR(40),
    @MATKHAU NVARCHAR(40),
    @QUYEN NVARCHAR(40)
AS
BEGIN
    INSERT INTO TAIKHOAN (MATK, MANV, TAIKHOAN, MATKHAU, QUYEN)
    VALUES (@MATK, @MANV, @TAIKHOAN, @MATKHAU, @QUYEN)
END

CREATE PROCEDURE deleteTaiKhoan
    @MATK NCHAR(10)
AS
BEGIN
    DELETE FROM TAIKHOAN
    WHERE MATK = @MATK
END

CREATE PROCEDURE updateTaiKhoan
    @MATK NCHAR(10),
    @TAIKHOAN NVARCHAR(40),
    @MATKHAU NVARCHAR(40),
    @QUYEN NVARCHAR(40)
AS
BEGIN
    UPDATE TAIKHOAN
    SET TAIKHOAN = @TAIKHOAN, MATKHAU = @MATKHAU, QUYEN = @QUYEN
    WHERE MATK = @MATK
END